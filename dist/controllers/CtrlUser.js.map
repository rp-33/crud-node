{"version":3,"sources":["../../src/controllers/CtrlUser.js"],"names":["createUser","req","res","body","name","lastName","mail","ci","phone","person","User","findOne","$or","toLocaleLowerCase","status","send","error","save","message","err","getUsers","users","find","editUser","query","id","params","user","updateOne","_id","$set","n","ok","deleteUser","result","deleteOne"],"mappings":"AAAA;;;;;;;AAEA;;;;;;AAEO,IAAMA,kCAAa,eAAbA,UAAa,CAAMC,GAAN,EAAUC,GAAV,EAAgB;AACzC,KACA;AAAA,kBAOKD,IAAIE,IAPT;AAAA,MAEEC,IAFF,aAEEA,IAFF;AAAA,MAGEC,QAHF,aAGEA,QAHF;AAAA,MAIEC,IAJF,aAIEA,IAJF;AAAA,MAKEC,EALF,aAKEA,EALF;AAAA,MAMEC,KANF,aAMEA,KANF;;;AASC,MAAIC,SAAS,MAAMC,qBAAKC,OAAL,CAAa,EAACC,KAAI,CAAC,EAACN,MAAKA,KAAKO,iBAAL,EAAN,EAAD,EAAiC,EAACN,IAAGA,EAAJ,EAAjC,CAAL,EAAb,EAA6D,EAACD,MAAK,IAAN,EAAWC,IAAG,IAAd,EAA7D,CAAnB;;AAEI,MAAGE,MAAH,EAAW,OAAOP,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,uCAAP,EAArB,CAAP;;AAETP,WAAS,IAAIC,oBAAJ,CAAS;AACfN,aADe;AAEfC,qBAFe;AAGfC,aAHe;AAIfC,SAJe;AAKfC;AALe,GAAT,CAAT;;AAQA,QAAMC,OAAOQ,IAAP,EAAN;;AAEAf,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,SAAU,wBAAX,EAArB;AAEN,EA1BD,CA2BA,OAAMC,GAAN,EACA;AACCjB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,cAAP,EAArB;AACA;AACD,CAhCM;;AAkCA,IAAMI,8BAAW,eAAXA,QAAW,CAAMnB,GAAN,EAAUC,GAAV,EAAgB;AACvC,KACA;AACC,MAAImB,QAAQ,MAAMX,qBAAKY,IAAL,EAAlB;AACApB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,KAArB;AACA,EAJD,CAKA,OAAMF,GAAN,EACA;AACCjB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,cAAP,EAArB;AACA;AACD,CAVM;;AAYA,IAAMO,8BAAW,eAAXA,QAAW,CAAMtB,GAAN,EAAUC,GAAV,EAAgB;AACvC,KACA;AAAA,mBAOKD,IAAIuB,KAPT;AAAA,MAEEpB,IAFF,cAEEA,IAFF;AAAA,MAGEC,QAHF,cAGEA,QAHF;AAAA,MAIEC,IAJF,cAIEA,IAJF;AAAA,MAKEC,EALF,cAKEA,EALF;AAAA,MAMEC,KANF,cAMEA,KANF;AAAA,MASMiB,EATN,GASYxB,IAAIyB,MAThB,CASMD,EATN;;;AAWO,MAAME,OAAO,MAAMjB,qBAAKkB,SAAL,CAAe,EAACC,KAAIJ,EAAL,EAAf,EAAwB,EAACK,MAAK,EAAC1B,UAAD,EAAMC,kBAAN,EAAeC,UAAf,EAAoBC,MAApB,EAAuBC,YAAvB,EAAN,EAAxB,CAAnB;AACA,MAAGmB,KAAKI,CAAL,GAAS,CAAT,IAAcJ,KAAKK,EAAL,GAAU,CAA3B,EAA8B,OAAO9B,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,SAAU,wBAAX,EAArB,CAAP;AAC9BhB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,kBAAP,EAArB;AACN,EAfD,CAgBA,OAAMG,GAAN,EACA;AACCjB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,cAAP,EAArB;AACA;AACD,CArBM;;AAuBA,IAAMiB,kCAAa,eAAbA,UAAa,CAAMhC,GAAN,EAAUC,GAAV,EAAgB;AACzC,KACA;AAAA,MAEQ2B,GAFR,GAEe5B,IAAIuB,KAFnB,CAEQK,GAFR;;AAGC,MAAMK,SAAS,MAAMxB,qBAAKyB,SAAL,CAAe,EAACN,QAAD,EAAf,CAArB;AACK,MAAGK,OAAOH,CAAP,GAAW,CAAX,IAAgBG,OAAOF,EAAP,GAAY,CAA/B,EAAkC,OAAO9B,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACG,SAAU,cAAX,EAArB,CAAP;AAClChB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,kBAAP,EAArB;AACL,EAPD,CAQA,OAAMG,GAAN,EACA;AACCjB,MAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,OAAM,cAAP,EAArB;AACA;AACD,CAbM","file":"CtrlUser.js","sourcesContent":["'use strict';\n\nimport User from '../models/SchemaUser';\n\nexport const createUser = async(req,res)=>{\n\ttry\n\t{\n\t\tlet {\n\t\t\tname,\n\t\t\tlastName,\n\t\t\tmail,\n\t\t\tci,\n\t\t\tphone\n\t\t} = req.body;\n\n\t\tlet person = await User.findOne({$or:[{mail:mail.toLocaleLowerCase()},{ci:ci}]},{mail:true,ci:true});\n\n      if(person) return res.status(400).send({error:'Mail or identity card already exists.'});    \n \n        person = new User({\n           name,\n           lastName,\n           mail,\n           ci,\n           phone\n        })\n\n        await person.save();\n\n        res.status(201).send({message : 'Was successfully saved'})\n\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Server error'});\n\t}\n}\n\nexport const getUsers = async(req,res)=>{\n\ttry\n\t{\n\t\tlet users = await User.find();\n\t\tres.status(200).send(users);\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Server error'});\n\t}\n}\n\nexport const editUser = async(req,res)=>{\n\ttry\n\t{\n\t\tlet {\n\t\t\tname,\n\t\t\tlastName,\n\t\t\tmail,\n\t\t\tci,\n\t\t\tphone\n\t\t} = req.query;\n\n\t\tlet {id} = req.params;\n\n        const user = await User.updateOne({_id:id},{$set:{name,lastName,mail,ci,phone}});\n        if(user.n > 0 && user.ok > 0) return res.status(201).send({message : 'Was successfully saved'});\n        res.status(400).send({error:'Could not update'});\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Server error'});\n\t}\n}\n\nexport const deleteUser = async(req,res)=>{\n\ttry\n\t{\n\t\t\n\t\tconst {_id} = req.query;\n\t\tconst result = await User.deleteOne({_id});\n      \tif(result.n > 0 && result.ok > 0) return res.status(201).send({message : 'Deleted user'});\n      \tres.status(400).send({error:'Could not delete'});\n\t}\n\tcatch(err)\n\t{\n\t\tres.status(500).send({error:'Server error'});\n\t}\n}"]}